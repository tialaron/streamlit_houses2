import numpy as np
import pandas as pd
import streamlit as st
from tensorflow.keras.models import load_model

pictures_path = '/app/streamlit_houses2/pictures/'
model01 = load_model('/app/streamlit_houses2/housemodel1.h5')

st.header('Искусственный Интеллект для прогнозирования стоимости недвижимости .')

with st.sidebar:
    st.markdown(''' # Содержание:''')
    st.markdown("## [1. Актуальность тематики](#about)", unsafe_allow_html=True)
    st.markdown("## [2. Этапы разработки кейса](#pipeline)", unsafe_allow_html=True)
    st.markdown("## [3. Задача](#task)", unsafe_allow_html=True)
    st.markdown("## [4. Линейная регрессия](#regression)", unsafe_allow_html=True)
    st.markdown("## [5. База данных ](#bazadannih)", unsafe_allow_html=True)
    st.markdown("## [6. Демонстрация работы](#neuronwork)", unsafe_allow_html=True)
    st.markdown("## [7. Тест](#voprosi)", unsafe_allow_html=True)

st.subheader('Актуальность тематики', anchor='about')
st.write('Кому будет полезно изучить данную работу ?')
st.write('1.Студентам экономических специальностей. Интересующимся оценкой недвижимости.')
st.write('2.Студентам, изучающим принципы математического обоснования ценообразования товаров.')
st.write('3.Студентам других специальностей, интересующимся возможностями применением искусственного интеллекта в области ценообразования.')

st.subheader('Этапы разработки кейса', anchor='pipeline')
st.image(pictures_path+'pipelinehousecost2.png',caption='Этапы проектирования кейса')
with st.expander("Общая схема"):
    st.markdown(
        '''
        \n**Этапы:**
        \n1. Создаётся датасет:
        \nВ данной работе используется датасет, содержащий более 60000 строк с указанием адреса и характеристик квартир. А также краткие текстовые комментарии по каждой. 
        \n2. Функции подготовки данных:
        \nЭти функции преобразовывают данные о характеристиках и адресе квартиры в числовой вектор вида [0,0,1,0,1,0,0,0,1,1,...]. 
        \n3. Функция нормализации:
        \nДанная функция уравновешивает резкие скачки цены, приводя всю выборку к нормальному распределению.
        \n4. Обучение сети:
        \nВ процессе обучения сеть рассматривает числовые векторы вида  [0,0,1,0,1,0,0,0,1,1,...] и сопоставляет их со значением цены.
        \n5. Функции подготовки демонстрации:
        \nС помощью zero-code решений библиотеки streamlit задаются входные параметры для сети, которые преобразовываются в вектор вида  [0,0,1,0,1,0,0,0,1,1,...]. В ответ на него сеть выдает значение цены квартиры.
        \n6. Приложение Streamlit:
        \nГотовое приложение представляет из себя программный продукт с возможностью размещения на сервере.
        ''')


#________________________Задача______________________________
st.subheader('Задача',anchor='task')
st.write('Необходимо определить примерную цену квартиры по ее характеристикам и адресу. '
         'В данной задаче рассматривается датасет из более 60000 объявлений о продаже квартиры с указанием адресов и характеристик.')
st.image(pictures_path+'housestable.jpg',caption='Примерное содержание датасета')
st.write('Для упрощения задачи, в качестве адреса будем рассматривать только указание станции метро и время до квартиры на транспорте или пешком')

#_________________________Линейная регрессия___________________________________
st.subheader('Линейная регрессия',anchor='regression')
st.write('Линейная регрессия - используемая в статистике регрессионная модель зависимости одной (объясняемой, зависимой) переменной Y от другой или нескольких других переменных (факторов, регрессоров, независимых переменных) X с линейной функцией зависимости.')
st.image(pictures_path+'linregr1.png')
st.write('Данную модель довольно часто используют в эконометрике, поэтому она очень хорошо изучена. В качестве примеров можно привести модель прогнозирования затрат организации и [модель потребительских расходов](https://studme.org/51197/ekonomika/model_natsionalnyy_dohod_sovokupnye_rashody_keynsianskiy_krest) . '
         'Различают также полиномиальную и криволинейную регрессии, но в данной работе будет рассматриваться именно линейная.')

#_________________________База данных___________________________________
st.subheader('База данных',anchor='bazadannih')
st.write('Все строки преобразовываются в векторы размером 108 нулей или единичек и последним элементом будет являться нормализованное число, характеризующее цену квартиры.')

#_________________________Демонстрация работы___________________________________
st.subheader('Демонстрация работы',anchor='neuronwork')
st.write('С помощью выпадающих окон меню можно подобрать характеристики квартиры для которой необходимо выполнить прогноз цены.')




